{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[file,setFile]=useState(null);const[distances,setDistances]=useState([]);const handleFileUpload=event=>{setFile(event.target.files[0]);};const handleSubmit=async event=>{event.preventDefault();const formData=new FormData();formData.append('file',file);try{const response=await axios.post('http://localhost:8000/upload-csv/',formData,{headers:{'Content-Type':'multipart/form-data'}});setDistances(response.data);}catch(error){console.error('Erro ao fazer upload do CSV',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Calculadora de Dist\\xE2ncia entre CEPs\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Calcular Dist\\xE2ncias\"})]}),distances.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Resultados\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"CEP A\"}),/*#__PURE__*/_jsx(\"th\",{children:\"CEP B\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dist\\xE2ncia (km)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:distances.map((distance,index)=>{var _distance$Distancia_k;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:distance.CEP_A}),/*#__PURE__*/_jsx(\"td\",{children:distance.CEP_B}),/*#__PURE__*/_jsx(\"td\",{children:(_distance$Distancia_k=distance.Distancia_km)!==null&&_distance$Distancia_k!==void 0?_distance$Distancia_k:'Indisponível'})]},index);})})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","App","file","setFile","distances","setDistances","handleFileUpload","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","error","console","className","children","onSubmit","type","accept","onChange","length","map","distance","index","_distance$Distancia_k","CEP_A","CEP_B","Distancia_km"],"sources":["C:/projeto-calculadora-ceps/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [distances, setDistances] = useState([]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/upload-csv/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setDistances(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao fazer upload do CSV', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Calculadora de Distância entre CEPs</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n        <button type=\"submit\">Calcular Distâncias</button>\r\n      </form>\r\n\r\n      {distances.length > 0 && (\r\n        <div>\r\n          <h2>Resultados</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>CEP A</th>\r\n                <th>CEP B</th>\r\n                <th>Distância (km)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {distances.map((distance, index) => (\r\n                <tr key={index}>\r\n                  <td>{distance.CEP_A}</td>\r\n                  <td>{distance.CEP_B}</td>\r\n                  <td>{distance.Distancia_km ?? 'Indisponível'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAW,gBAAgB,CAAIC,KAAK,EAAK,CAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,KAAK,EAAK,CACpCA,KAAK,CAACI,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEZ,IAAI,CAAC,CAE7B,GAAI,CACF,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,IAAI,CAAC,mCAAmC,CAAEJ,QAAQ,CAAE,CAC/EK,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACFZ,YAAY,CAACU,QAAQ,CAACG,IAAI,CAAC,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAED,mBACEnB,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBxB,IAAA,OAAAwB,QAAA,CAAI,wCAAmC,CAAI,CAAC,cAC5CtB,KAAA,SAAMuB,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eAC3BxB,IAAA,UAAO0B,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAACC,QAAQ,CAAEpB,gBAAiB,CAAE,CAAC,cAC/DR,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,wBAAmB,CAAQ,CAAC,EAC9C,CAAC,CAENlB,SAAS,CAACuB,MAAM,CAAG,CAAC,eACnB3B,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBtB,KAAA,UAAAsB,QAAA,eACExB,IAAA,UAAAwB,QAAA,cACEtB,KAAA,OAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdxB,IAAA,OAAAwB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdxB,IAAA,OAAAwB,QAAA,CAAI,mBAAc,CAAI,CAAC,EACrB,CAAC,CACA,CAAC,cACRxB,IAAA,UAAAwB,QAAA,CACGlB,SAAS,CAACwB,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,QAAAC,qBAAA,oBAC7B/B,KAAA,OAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAKO,QAAQ,CAACG,KAAK,CAAK,CAAC,cACzBlC,IAAA,OAAAwB,QAAA,CAAKO,QAAQ,CAACI,KAAK,CAAK,CAAC,cACzBnC,IAAA,OAAAwB,QAAA,EAAAS,qBAAA,CAAKF,QAAQ,CAACK,YAAY,UAAAH,qBAAA,UAAAA,qBAAA,CAAI,cAAc,CAAK,CAAC,GAH3CD,KAIL,CAAC,EACN,CAAC,CACG,CAAC,EACH,CAAC,EACL,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAA7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}